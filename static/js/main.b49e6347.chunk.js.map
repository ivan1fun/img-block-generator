{"version":3,"sources":["utils/GetTemplate.js","App.js","index.js"],"names":["GetTemplate","link","alt","imageUrl","App","props","state","codeBlock","React","createRef","copyToClipboard","bind","handleChange","e","navigator","permissions","query","name","then","result","clipboard","writeText","current","value","event","target","type","checked","this","setState","Container","Row","Col","className","Card","Body","xs","Form","Group","Label","Control","onChange","required","placeholder","as","ref","style","height","Button","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAaeA,EAbK,SAACC,EAAMC,EAAKC,GAC9B,MAAM,6VAAN,OAKWF,EALX,2IAMyEC,EANzE,6BAMiGC,EANjG,4JAM6PD,EAN7P,wF,OCImBE,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXL,KAAM,GACNC,IAAK,GACLC,SAAU,IAEZ,EAAKI,UAAYC,IAAMC,YAEvB,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAVH,E,mDAanB,SAAgBE,GAAI,IAAD,OACjBC,UAAUC,YACPC,MAAM,CAACC,KAAM,oBACbC,MAAK,SAACC,GACyD,IAAD,EAAxC,YAAjBA,EAAOb,OAAwC,WAAjBa,EAAOb,OACvCQ,UAAUM,UAAUC,UAApB,UAA8B,EAAKd,UAAUe,eAA7C,aAA8B,EAAwBC,Y,0BAK9D,SAAaC,GACX,IAAMC,EAASD,EAAMC,OACfF,EAAwB,aAAhBE,EAAOC,KAAsBD,EAAOE,QAAUF,EAAOF,MAC7DN,EAAOQ,EAAOR,KAEpBW,KAAKC,SAAL,eACGZ,EAAOM,M,oBAIZ,WACE,OAAQ,cAACO,EAAA,EAAD,UACN,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,UAAW,eAAhB,SACE,cAACC,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,cAACL,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKI,GAAI,EAAT,SACE,eAACC,EAAA,EAAD,CAAMJ,UAAW,OAAjB,UACE,eAACI,EAAA,EAAKC,MAAN,CAAYL,UAAW,OAAvB,UACE,cAACI,EAAA,EAAKE,MAAN,mBACA,cAACF,EAAA,EAAKG,QAAN,CAAcd,KAAK,MAAMH,MAAOK,KAAKtB,MAAML,KAAMgB,KAAK,OAAOwB,SAAUb,KAAKhB,aAAc8B,UAAQ,EAACC,YAAY,kBAEjH,eAACN,EAAA,EAAKC,MAAN,CAAYL,UAAW,OAAvB,UACE,cAACI,EAAA,EAAKE,MAAN,wBACA,cAACF,EAAA,EAAKG,QAAN,CAAcd,KAAK,OAAOH,MAAOK,KAAKtB,MAAMJ,IAAKe,KAAK,MAAMwB,SAAUb,KAAKhB,aAAc8B,UAAQ,EAACC,YAAY,iBAEhH,eAACN,EAAA,EAAKC,MAAN,CAAYL,UAAW,OAAvB,UACE,cAACI,EAAA,EAAKE,MAAN,wBACA,cAACF,EAAA,EAAKG,QAAN,CAAcd,KAAK,MAAMH,MAAOK,KAAKtB,MAAMH,SAAUc,KAAK,WAAWwB,SAAUb,KAAKhB,aAAc8B,UAAQ,EAACC,YAAY,sBAI7H,eAACX,EAAA,EAAD,CAAKI,GAAI,EAAT,UACE,qBAAKH,UAAU,aAAf,SACE,cAACI,EAAA,EAAKG,QAAN,CAAcI,GAAG,WAAWC,IAAKjB,KAAKrB,UAAWuC,MAAO,CAACC,OAAQ,SAAUxB,MAAOvB,EAAY4B,KAAKtB,MAAML,KAAM2B,KAAKtB,MAAML,KAAM2B,KAAKtB,MAAMH,cAE7I,cAAC6C,EAAA,EAAD,CAAQtB,KAAK,SAASuB,QAASrB,KAAKlB,gBAApC,qD,GA9DawC,aCDjCC,IAASC,OAAO,cAAC,IAAMC,WAAP,UACd,cAAC,EAAD,MACmBC,SAASC,eAAe,W","file":"static/js/main.b49e6347.chunk.js","sourcesContent":["const GetTemplate = (link, alt, imageUrl) => {\n  return `<div class=\"img-container center fixedwidth fullwidthOnMobile\" align=\"center\" style=\"padding-right: 0px;padding-left: 0px;\">\n  <!--[if mso]>\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n    <tr style=\"line-height:0px\">\n      <td style=\"padding-right: 0px;padding-left: 0px;\" align=\"center\"><![endif]-->\n  <a href=\"${link}\" style=\"outline:none\" tabindex=\"-1\" target=\"_blank\">\n    <img class=\"center fixedwidth fullwidthOnMobile\" align=\"center\" alt=\"${alt}\" border=\"0\" src=\"${imageUrl}\" style=\"text-decoration: none; -ms-interpolation-mode: bicubic; height: auto; border: 0; width: 530px; max-width: 100%; display: block;\" title=\"${alt}\" width=\"530\">\n  </a>\n  <!--[if mso]></td></tr></table><![endif]-->\n</div>`;\n};\n\nexport default GetTemplate;\n","import './App.scss';\nimport React, {Component} from 'react';\nimport {Button, Card, Col, Container, Form, Row} from 'react-bootstrap';\nimport GetTemplate from './utils/GetTemplate';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      link: '',\n      alt: '',\n      imageUrl: ''\n    };\n    this.codeBlock = React.createRef();\n    \n    this.copyToClipboard = this.copyToClipboard.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  \n  copyToClipboard(e) {\n    navigator.permissions\n      .query({name: 'clipboard-write'})\n      .then((result) => {\n        if (result.state === 'granted' || result.state === 'prompt') {\n          navigator.clipboard.writeText(this.codeBlock.current?.value);\n        }\n      });\n  }\n  \n  handleChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    \n    this.setState({\n      [name]: value\n    });\n  }\n  \n  render() {\n    return (<Container>\n      <Row>\n        <Col className={'mt-5 mx-auto'}>\n          <Card>\n            <Card.Body>\n              <Container>\n                <Row>\n                  <Col xs={4}>\n                    <Form className={'mb-3'}>\n                      <Form.Group className={'mb-3'}>\n                        <Form.Label>Link</Form.Label>\n                        <Form.Control type=\"url\" value={this.state.link} name=\"link\" onChange={this.handleChange} required placeholder=\"Enter link\"/>\n                      </Form.Group>\n                      <Form.Group className={'mb-3'}>\n                        <Form.Label>Image alt</Form.Label>\n                        <Form.Control type=\"text\" value={this.state.alt} name=\"alt\" onChange={this.handleChange} required placeholder=\"Enter alt\"/>\n                      </Form.Group>\n                      <Form.Group className={'mb-3'}>\n                        <Form.Label>Image URL</Form.Label>\n                        <Form.Control type=\"url\" value={this.state.imageUrl} name=\"imageUrl\" onChange={this.handleChange} required placeholder=\"Enter URL\"/>\n                      </Form.Group>\n                    </Form>\n                  </Col>\n                  <Col xs={8}>\n                    <div className=\"w-100 mb-3\">\n                      <Form.Control as=\"textarea\" ref={this.codeBlock} style={{height: '370px'}} value={GetTemplate(this.state.link, this.state.link, this.state.imageUrl)}/>\n                    </div>\n                    <Button type=\"button\" onClick={this.copyToClipboard}>Copy to clipboard</Button>\n                  </Col>\n                </Row>\n              </Container>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>);\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<React.StrictMode>\n  <App/>\n</React.StrictMode>, document.getElementById('root'));\n"],"sourceRoot":""}